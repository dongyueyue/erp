<wxs module="tempFun" lang="babel">
    const minuteFilter = (time) => {
        return Math.ceil(time/60)
    }
    module.exports.minuteFilter = minuteFilter;
</wxs>
<template>
    <pageWrap>
        <load :open="!detailLoaded">
            <view class="rundetail" v-if="isLogin">
                <view class="banner" >
                    <view class="bk" style="background-image:url({{rundetials.avatar}})"></view>
                    <view class="title">{{rundetials.title}}</view>
                    <view class="des">[{{rundetials.team_name}}]</view>
                </view>
                <view class="section">
                    <view class="s-title">约跑信息</view>
                    <view class="detail-list">
                        <view class="detail-list-item">
                            <text>活动名称</text>
                            <text>{{rundetials.title}}</text>
                        </view>
                        <view class="detail-list-item">
                            <text>活动时间</text>
                            <text>{{rundetials.start}}</text>
                        </view>
                        <view class="detail-list-item">
                            <text>活动时长</text>
                            <text>{{tempFun.minuteFilter(rundetials.run_time)}}分钟</text>
                        </view>
                        <view class="detail-list-item">
                            <text>活动区间配速</text>
                            <text>{{rundetials.pace_min}} - {{rundetials.pace_max}}</text>
                        </view>
                        <view class="detail-list-item">
                            <text>约跑最小公里数</text>
                            <text>{{rundetials.min_dist}}公里</text>
                        </view>
                    </view>
                </view>
                <view class="section">
                    <view class="s-title">活动内容</view>
                    <view class="detail-text">{{rundetials.introduction}} </view>
                </view>
                <view class="section">
                    <view class="s-title">提示</view>
                    <view class="detail-text">
                        <view>1.参与活动打卡成功，且配速以及跑步计分类型符合PK活动设定，基于打卡记录在活动中的得分会有额外倍数的积分奖励。</view>
                        <view>2.约跑记录必须当日23点59分59秒前上传到服务器，否则不记录打卡以及加成分数</view>
                        <view>3.聊天在约跑结束一周后自动解散。</view>
                        <view>4.约跑位置依据GPS定位，请跑步前确认GPS是开启状态，且EPK具有定位权限，否则无法打卡。</view>
                        <view>5.当多个约跑间有交集的情况下，只能报名其中一个，当所报名的约跑结束后（开始时间+约跑时长）才可以报名其它有时间交集的约跑。</view>
                    </view>
                </view>
                <view class="section">
                    <view class="s-title">约跑地点</view>
                    <view class="s-des">{{rundetials.site}}</view>
                    <map class="section-map" scale="15" show-location="true" markers="{{mapData.markers}}" longitude="{{mapData.longitude}}" latitude="{{mapData.latitude}}"></map>
                </view>
                <view class="section">
                    <view class="s-title">已报名人员</view>
                    <view class="ready-person">
                        <view class="ready-person-item" v-for="item in runnerDet">
                            <image mode="aspectFill" :src="item.user_avatar"></image>
                            <text>{{item.user_name}}</text>
                        </view>
                    </view>
                </view>

                <view class="btns-bottom">
                    <view class="btn" @click="join">报名</view>
                    <button class="btn" open-type="share">分享</button>
                    <!--<view class="btn" @click="share">分享</view>-->
                </view>
            </view>
        </load>
    </pageWrap>
</template>
<script>
    import wepy from '@wepy/core'
    import store from '../store';
    import { mapState } from '@wepy/x';
    import request from '../common/request';
    import authConfig from '../store/mod/authConfig';
    const loginType = authConfig.loginType
    wepy.page({
        store,
        config: {
            navigationBarTitleText: 'test'
        },

        hooks: {
            // Page 级别 hook, 只对当前 Page 的 setData 生效。
            'before-setData': function (dirty) {

            }
        },


        computed:{
            ...mapState(['auth']),
            isLogin(){
                if(this.auth.loginType==loginType.LOGIN || this.auth.loginType == loginType.WILLLOGIN){
                    return true
                }else {
                    return false;
                }
            }
        },

        mixins: [],

        data: {
            mapData:{
                latitude: "",
                longitude: "",
                markers: [],
            },
            detailLoaded:false,
            run_id:'',
            rundetials:{},
            runnerDet:[]
        },

        methods:{
            init(){
                this.detailLoaded = false;
                request.api({
                    "service": "run.getRunDetail",
                    "ksid": this.auth.user.ksid,
                    "token": this.auth.user.token,
                    "run_id":this.runid,
                }).then(res=>{
                    if(res.data.data.code==0){
                        this.rundetials = res.data.data.info.run_list;
                        this.runnerDet = res.data.data.info.run_user;
                        this.mapData.latitude = this.rundetials.lat;
                        this.mapData.longitude = this.rundetials.lng;
                        this.mapData.markers = [{
                            id: "1",
                            latitude: this.rundetials.lat,
                            longitude: this.rundetials.lng,
                            width: 20,
                            height: 20,
                            iconPath: "",
                            callout:{}
                        }]
                        let startD = new Date(this.rundetials.start);
                        let now = new Date();
                        if(now.getTime()<startD.getTime()){
                            this.mapData.markers[0].callout = {
                                content:'时间未到',
                                bgColor:'#FF8686',
                                borderColor:'#FF8686',
                                color:'#fff',
                                borderRadius:'8',
                                padding:8,
                                textAlign:'center',
                                display:'ALWAYS'
                            }
                        }
                    }
                    this.detailLoaded = true;
                })
            },
            join(){
                request.api({
                    "service": "run.joinRun",
                    "ksid": this.auth.user.ksid,
                    "run_id": this.runid,
                    "token": this.auth.user.token
                }).then(res=>{
                    if(res.data.data.code==0){
                        wx.showToast({
                            title: '报名成功',
                            icon: 'none',
                            duration: 2000
                        })
                    }else{
                        wx.showToast({
                            title: res.data.msg || res.data.data.msg,
                            icon: 'none',
                            duration: 2000
                        })
                    }
                })
            }
        },
        onLoad(res){
            this.runid = res.id
            this.init();

        },
        onShareAppMessage(){
            return {
                title: this.rundetials.title,
                path: '/pages/rundetail?id='+this.runid,
//                imageUrl:''
            }
        },
        created () {
        }
    });
</script>
<style lang="less">
    .rundetail{
        padding-bottom:100rpx;
        color:#666;
        .banner{
            height: 360rpx;
            background: #000;
            box-sizing:border-box;
            padding-top:100rpx;
            margin-bottom:60rpx;
            position:relative;
            .bk{
               width: 100%;
               height: 100%;
               position: absolute;
                left:0;
                top:0;
                background: no-repeat;
                background: cover;
                opacity: 0.5;
                z-index: 0;
            }
            .title{
                color: #fff;
                font-size: 56rpx;
                text-align: center;
                margin-bottom: 28rpx;
                position:relative;
                padding: 0 30rpx;
            }
            .des{
                color: #fff;
                font-size: 30rpx;
                text-align: center;
                position:relative;
            }
        }
        .section{
            box-shadow:0px 0px 16rpx 0px rgba(153,100,206,0.18);
            border-radius:15rpx;
            width: 624rpx;
            min-height:130rpx;
            margin: 0 auto 70rpx;
            padding-top:112rpx;
            position:relative;
            box-sizing:border-box;

            .s-title{
                height: 48rpx;
                padding:10rpx 30rpx 10rpx 16rpx;
                font-size:30rpx;
                text-align: center;
                position: absolute;
                color:#fff;
                top:30rpx;
                left:0;
                background:rgba(153,100,206,1);
                border-radius:0px 40rpx 40rpx 0px;
                display:flex;
                align-items:center;
            }
            .s-des{
                font-size:30rpx;
                padding:25rpx;
                padding-top:10rpx;
            }
            .detail-list{
                width:570rpx;
                margin:0 auto;
                .detail-list-item{
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    font-size:26rpx;
                    padding-right:10rpx;
                    height:90rpx;
                    color:#666;
                    border-bottom: 2rpx solid #F1F1F1;
                }
            }
            .detail-text{
                width:570rpx;
                margin:0 auto;
                line-height:48rpx;
                font-size:30rpx;
                padding-bottom:35rpx;
                view{
                    margin-bottom:25rpx;
                    text-indent: 90rpx;
                }
            }
            .section-map{
                width: 624rpx;
                height:358rpx;
            }
            .ready-person{
                width:535rpx;
                margin:0 auto;
                .ready-person-item{
                    display:flex;
                    align-items: center;
                    height:86rpx;
                    image{
                        width: 56rpx;
                        height:56rpx;
                        border-radius:50%;
                        margin-right:38rpx;
                    }
                    text{
                        font-size:26rpx;
                        color:#666666;
                        line-height:86rpx;
                        width:441rpx;
                        border-bottom:1px solid #F1F1F1;
                    }
                    &:last-child{
                        text{
                            border-bottom:none;
                        }
                     }
                }
            }
        }
        .btns-bottom{
            position: fixed;
            bottom:0;
            display:flex;
            width:100%;
            &:after{
                content:'';
                position: absolute;
                width: 2rpx;
                height: 40rpx;
                top:29rpx;
                background: #fff;
                left:50%;
             }
            .btn{
                width: 50%;
                height: 98rpx;
                display:flex;
                align-items: center;
                justify-content:center;
                font-size: 34rpx;
                color:#fff;
                background: #9964CE;
                border-radius: 0;
            }
        }
    }
</style>
<config>
    {
        "usingComponents": {
            "pageWrap": "../components/pageWrap",
            "defaultSection": "../components/defaultSection",
            "load":"../components/loading"
        }
    }
</config>

