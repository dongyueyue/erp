<!--小队排行-->
<wxs module="tempFun" lang="babel">
    const typeFilter = (type) => {
        if(type==1){
            return '报名中';
        }else if(type == 2){
            return '分组中';
        }else if(type==3){
            return '进行中';
        }else if(type==4){
            return '已结束'
        }else if(type == 5){
            return '已取消'
        }else{
            return '未开始'
        }
    }
    module.exports.typeFilter = typeFilter;
</wxs>
<template>
    <pageWrap>
        <load :open="!rankLoaded">
            <view class="ranking">
                <view class="banner" style="background-image:url({{matchData.avatar}})">
                    <view class="title">{{matchData.title}}</view>
                    <view class="time">{{matchData.start}}={{matchData.end}}</view>
                    <view class="desc">{{tempFun.typeFilter(matchData.type)}} 积分赛</view>
                </view>
                <view class="rank-list">
                    <view class="rank-card" @click="jump(item.groupid)" v-for="item in matchData.group_list">
                        <view class="index">{{item.sort}}</view>
                        <image class="photo" src="{{item.avatar}}"></image>
                        <view class="details">
                            <text class="group-name">{{item.name}}</text>
                            <text class="num">{{item.numb}}人</text>
                        </view>
                        <view class="score">{{item.score}}分</view>
                    </view>

                </view>
            </view>
        </load>
    </pageWrap>
</template>
<script>
    import wepy from '@wepy/core'
    import eventHub from '../common/eventHub';
    import { mapState } from '@wepy/x';
    import request from '../common/request';
    import store from '../store';
    import authConfig from '../store/mod/authConfig';
    const loginType = authConfig.loginType;
    wepy.page({
        store,
        config: {
            navigationBarTitleText: 'test',

        },

        hooks: {
            // Page 级别 hook, 只对当前 Page 的 setData 生效。
            'before-setData': function (dirty) {

            }
        },
        mounted:function(){

        },
        mixins: [],

        data: {
            matchData:{},
            matchId:'',
            rankLoaded:false
        },

        computed: {
            ...mapState(['auth']),
            isLogin(){
                if(this.auth.loginType==loginType.LOGIN || this.auth.loginType == loginType.WILLLOGIN){
                    return true
                }else {
                    return false;
                }
            }
        },

        methods:{
           init(){
                this.rankLoaded = false;
                request.api({
                       "service": "team.getMatchInfo",
                       "ksid": this.auth.user.ksid,
                       "matchid":this.matchId,
                       "token": this.auth.user.token,
                }).then((res)=>{
                   let data = res.data.data
                   if(data.code==0){
                        this.matchData = data.info
                    }
                    this.rankLoaded = true;
                })
           },
           jump(id){
                wx.navigateTo({
                    url:'team-detail?id='+id
                })
            }
        },
        onLoad(res){
            this.matchId = res.id
            this.init();

        },
        created () {

        }
    });
</script>
<style lang="less">
    page{
        background:#F4F5F9;
    }
    .ranking{
        width:100%;
        height:100%;
        .banner{
            width: 750rpx;
            height:284rpx;
            background: #000 no-repeat top;
            background-size:cover;
            box-sizing:border-box;
            padding-top:63rpx;
            padding-left:63rpx;
            .title{
                font-size:40rpx;
                font-weight: bold;
                color:#fff;
                margin-bottom: 40rpx;;
            }
            .time{
                font-size:20rpx;
                color:#fff;
                font-weight: bold;
                margin-bottom:30rpx;
            }
            .desc{
                font-size:22rpx;
                color:#fff;
                font-weight: bold;
            }
        }
        .rank-list{
            padding-top:39rpx;
            margin-bottom:100rpx;
            .rank-card{
                width: 690rpx;
                height: 152rpx;
                box-sizing: border-box;
                padding-left: 35rpx;
                border-radius: 15rpx;
                background: #fff;
                margin: 0 auto;
                display:flex;
                align-items:center;
                margin-bottom:20rpx;
                .index{
                    font-size:40rpx;
                    font-weight: bold;
                    color:#9966CC;
                    width: 50rpx;
                    line-height: 152rpx;
                    margin-right: 7rpx;
                }
                .photo{
                    width: 82rpx;
                    height: 82rpx;
                    border-radius: 100%;
                    background: #000;
                    margin-right: 20rpx;
                }
                .details{
                    width:260rpx;
                    margin-right:4rpx;
                    text{
                        display: block;
                    }
                    .group-name{
                        font-weight: bold;
                        font-size:24rpx;
                        color:#212121;
                        margin-bottom:20rpx;
                    }
                    .num{
                        font-size:22rpx;
                        color:rgba(33,33,33,0.6);
                    }
                }
                .score{
                    font-size:36rpx;
                    color: #212121;
                }
            }
        }
    }
</style>
<config>
    {
        "usingComponents": {
            "pageWrap": "../components/pageWrap",
            "defaultSection": "../components/defaultSection",
            "load":"../components/loading"
        }
    }
</config>