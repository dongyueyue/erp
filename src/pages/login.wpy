<!--登录-->
<wxs module="m1" lang="babel">

</wxs>
<template>
    <view class="login">
      <!--<view v-show="type==1">-->
        <!--<text class="title">检测到当前微信已在EPK注册，确认使用该账号？</text>-->
        <!--<view>-->
          <!--<view class="protrait">-->
            <!--<text>用户昵称</text>-->
          <!--</view>-->
        <!--</view>-->
      <!--</view>-->
      <view v-show="loginType.UNLOGIN == auth.loginType">
        <view class="icon"></view>
        <view class="input-item">
          <input placeholder="请输入手机号" v-model="phone" placeholder-style="color:rgba(237,237,237,.8);">
        </view>
        <view class="input-item">
          <input type="password" v-model="password" placeholder="请输入密码" placeholder-style="color:rgba(237,237,237,.8);">
        </view>

        <view class="l-btn mt" @click="login">登录</view>
        <view class="l-btn" @click="register">新用户注册</view>
      </view>
    </view>
    <authLink @jumpBack="jumpBack"></authLink>
</template>
<script>
  import wepy from '@wepy/core'
  import eventHub from '../common/eventHub';
  import store from '../store';
  import request from '../common/request';
  import md5 from 'md5';
  import { mapState } from '@wepy/x';
  import authConfig from '../store/mod/authConfig';
  const loginType = authConfig.loginType
  wepy.page({
    store,
    config: {
      navigationBarTitleText: 'test'
    },

    hooks: {
      // Page 级别 hook, 只对当前 Page 的 setData 生效。
      'before-setData': function (dirty) {

      }
    },

    computed:{
      ...mapState(['auth'])
    },

    mixins: [],

    data: {
      loginType,
      phone:'',
      password:''
    },


    methods:{
      jumpBack(){
        wx.navigateBack({
          delta: 1
        })
      },
      register(){
        wx.navigateTo({
          url:'register'
        })
      },
      validate(){
        if(!this.phone || !this.password){
          return false;
        }
        return true;
      },
      login(){
        if(!this.validate()){
          wx.showToast({
            title: '手机号或者密码错误',
            icon: 'none',
            duration: 2000
          })
          return ;
        }
        request.api({
          "service": "WechatMini.phoneLogin",
          "phone": this.phone,
          "pwd":md5(this.password)
        }).then(res=>{
          let data = res.data.data
          if(data.code == 0 ){
            this.$store.commit('setServerDataInUser',data)
            if(!data.info.wx_openid || !data.info.wx_unionid){
              this.$store.commit('setLoginType',loginType.WILLLOGIN)
              this.$store.dispatch('authorizeFaillToUN')
            }else{
              this.$store.commit('setLoginType',loginType.LOGIN)
              wx.navigateTo({
                url:'home-user'
              })
            }
          }else if(data.code == 102){
            wx.showToast({
              title: '无效手机号',
              icon: 'none',
              duration: 2000
            })
          }else if(data.code == 103){
            wx.showToast({
              title: '手机号已经注册',
              icon: 'none',
              duration: 2000
            })
          }else if(data.code == 101){
            wx.showToast({
              title: '验证码错误',
              icon: 'none',
              duration: 2000
            })
          }else{
            wx.showToast({
              title: data.msg,
              icon: 'none',
              duration: 2000
            })
          }
        })
      },

    },

    created () {

    }
  });
</script>
<style lang="less">

  .login{
    width: 100%;
    height: 100%;
    background: #000 no-repeat;
    background-size:cover;
    box-sizing: border-box;
    padding-top: 1rpx;
    .title{
      font-size:42rpx;
      text-align: center;
      width:570rpx;
      margin:200rpx auto 0;
      color: #fff;
      display:block;
    }
    .icon{
      width:159rpx;
      height:159rpx;
      margin: 131rpx auto;
      background: #000 no-repeat;
      background-size:cover;
    }
    .l-btn{
      display: flex;
      align-items: center;
      justify-content: center;
      color:#fff;
      background:#9966CC;
      border-radius:15rpx;
      width: 564rpx;
      height: 89rpx;
      margin:0 auto 37rpx;
      &.mt{
        margin-top:79rpx;
       }
    }
  }
  .input-item{
    border-bottom:2rpx solid rgba(237,237,237,.8);
    width: 634rpx;
    margin:0 auto;
    display:flex;
    input{
     height: 100rpx;
     width: 450rpx;
     font-size:28rpx;
     color:rgba(237,237,237,.8);
    }
    label{
      font-size:26rpx;
      display:flex;
      width: 156rpx;
      align-items: center;
      color:rgba(237,237,237,.8);
      margin-right:20rpx;
    }
  }
  .turn-link{
    font-size:26rpx;
    color:rgba(237,237,237,.8);
    display:flex;
    justify-content: center;
    margin: 46rpx auto;
    .line{
      margin:0 15rpx;
    }
  }
</style>

<config>
  {
    "usingComponents": {
      "pageWrap": "../components/pageWrap",
      "authLink": "../components/authLinkUser"
    }
  }
</config>

