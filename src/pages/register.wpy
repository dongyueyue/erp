<!--注册-->
<wxs module="m1" lang="babel">

</wxs>
<template>
        <view class="login">
            <view>
                <view class="title">注册新账户</view>
                <view class="input-item">
                    <input placeholder="请输入手机号" v-model="phone" placeholder-style="color:rgba(237,237,237,.8);">
                </view>
                <view class="input-item ver">
                    <input type="text" v-model="vercode" placeholder="请输入验证码" placeholder-style="color:rgba(237,237,237,.8);" />
                    <view v-if="codeParam.codeBtnType==1" class="ver-btn" @click="sendCode">获取验证码</view>
                    <view v-else class="ver-btn">{{codeParam.times}} s</view>
                </view>
                <view class="input-item">
                    <input type="password" v-model="password" placeholder="请输入密码" placeholder-style="color:rgba(237,237,237,.8);">
                </view>
                <view class="l-btn" @click="register">注册</view>
            </view>

        </view>
        <authLink @jumpBack="jumpBack"></authLink>
</template>
<script>
    import wepy from '@wepy/core'
    import eventHub from '../common/eventHub';
    import store from '../store';
    import request from '../common/request';
    import md5 from 'md5';
    import authConfig from '../store/mod/authConfig';
    const loginType = authConfig.loginType
    wepy.page({
        store,
        config: {
            navigationBarTitleText: 'test'
        },

        hooks: {
            // Page 级别 hook, 只对当前 Page 的 setData 生效。
            'before-setData': function (dirty) {

            }
        },


        mixins: [],

        data: {
            phone:'',
            vercode:'',
            password:'',
            codeParam:{
                codeDuration:60,
                times:0,
                timer:null,
                codeBtnType:1
            }
        },

        computed: {

        },

        methods:{
            jumpBack(){
                wx.navigateBack({
                    delta: 2
                })
            },
            register(){
                if(this.validate()){

                    request.api({
                        "service": "WechatMini.phoneReg",
                        "phone": this.phone,
                        "pwd":md5(this.password),
                        "verifyCode":this.vercode
                    }).then(res=>{
                        let data = res.data.data
                        if(data.code == 0 ){
                            this.$store.commit('setServerDataInUser',data)
                            if(!data.info.wx_openid || !data.info.wx_unionid){
                                this.$store.commit('setLoginType',loginType.WILLLOGIN)
                                this.$store.dispatch('authorizeFaillToUN')
                            }else{
                                this.$store.commit('setLoginType',loginType.LOGIN)
                            }
                            wx.navigateTo({
                                url:'home-user'
                            })

                        }else if(data.code == 102){
                            wx.showToast({
                                title: '无效手机号',
                                icon: 'none',
                                duration: 2000
                            })
                        }else if(data.code == 103){
                            wx.showToast({
                                title: '手机号已经注册',
                                icon: 'none',
                                duration: 2000
                            })
                        }else if(data.code == 101){
                            wx.showToast({
                                title: '验证码错误',
                                icon: 'none',
                                duration: 2000
                            })
                        }else{
                            wx.showToast({
                                title: res.data.msg,
                                icon: 'none',
                                duration: 2000
                            })
                        }
                    })
                }
            },
            sendCode(){
                if(!this.phone){
                    return ;
                }
                this.timerCodeBtn()
                request.api({
                    "service": "Sms.get",
                    "phone": this.phone,
                    "handle":"1"
                }).then(res=>{
                    if(res.data.ret==200&&res.data.data.code==0){
                        wx.showToast({
                            title: '验证码已发送',
                            icon: 'none',
                            duration: 2000
                        })
                    }else{
                        wx.showToast({
                            title: res.data.msg||res.data.data.msg,
                            icon: 'none',
                            duration: 2000
                        })
                    }
                })
            },
            timerCodeBtn(){
                this.codeParam.codeBtnType = 0
                this.codeParam.timer = setInterval(()=>{
                    this.codeParam.times--;
                    if(this.codeParam.times == 0){
                        this.codeParam.codeBtnType = 1
                        clearInterval(this.codeParam.timer)
                    }
                },1000)
                this.codeParam.times = this.codeParam.codeDuration
            },
            validate(){
                if(!this.phone){
                    wx.showToast({
                        title: '请输入手机号',
                        icon: 'none',
                        duration: 2000
                    })
                    return false;
                }
                if(!this.vercode){
                    wx.showToast({
                        title: '请输入验证码',
                        icon: 'none',
                        duration: 2000
                    })
                    return false;
                }
                if(!this.password){
                    wx.showToast({
                        title: '请输入密码',
                        icon: 'none',
                        duration: 2000
                    })
                    return false;
                }

                return true;
            }
        },

        created () {

        }
    });
</script>
<style lang="less">

    .login{
        width: 100%;
        height: 100%;
        background:#000 no-repeat;
        background-size:cover;
        box-sizing: border-box;
        padding-top: 1rpx;
    .title{
        font-size:42rpx;
        text-align: left;
        width:570rpx;
        margin:179rpx auto 120rpx;
        color: #fff;
        display:block;
    }
    .icon{
        width:159rpx;
        height:159rpx;
        margin: 131rpx auto;
        background: red no-repeat;
        background-size:cover;
    }
    .l-btn{
        display: flex;
        align-items: center;
        justify-content: center;
        color:#fff;
        background:#9966CC;
        border-radius:15rpx;
        width: 564rpx;
        height: 89rpx;
        margin:79rpx auto 0;
    }
    }
    .input-item{
        border-bottom:2rpx solid rgba(237,237,237,.8);
        width: 634rpx;
        margin:0 auto;
        display:flex;
        input{
            height: 100rpx;
            width: 450rpx;
            font-size:28rpx;
            color:rgba(237,237,237,.8);
        }
        label{
            font-size:26rpx;
            display:flex;
            width: 156rpx;
            align-items: center;
            color:rgba(237,237,237,.8);
            margin-right:20rpx;
        }
        &.ver{
            border-bottom:none;
            input{
                border-bottom:2rpx solid rgba(237,237,237,.8);
            }
         }
        .ver-btn{
            width:236rpx;
            height: 72rpx;
            border-radius:36rpx;
            background: rgba(236,236,236,1);
            font-size:26rpx;
            color:#212121;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top:10px;
        }
    }
    .turn-link{
        font-size:26rpx;
        color:rgba(237,237,237,.8);
        display:flex;
        justify-content: center;
        margin: 46rpx auto;
    .line{
        margin:0 15rpx;
    }
    }
</style>

<config>
    {
        "usingComponents": {
            "authLink": "../components/authLinkUser"
        }
    }
</config>

